import { Utils } from 'knowdesign';
import { numTrans } from '../../../lib/utils';

export const getCardList = (type: string) => {
  return [
    {
      title: '应用数',
      code: '',
      api: 'serviceNum',
      icon: 'icon-fuwushu',
      text: type == 'yunwei' ? '未关联主机的应用数' : '',
      textCode: 1,
      textApi: type == 'yunwei' ? 'nonRelateAnyHostServiceNum' : '',
      show: true,
    },
    {
      title: '主机数',
      code: 4,
      api: 'hostNum',
      icon: 'icon-zhujizongshu',
      text: type == 'yunwei' ? '故障主机数：' : '',
      textCode: 5,
      textApi: type == 'yunwei' ? 'faultyHostNum' : '',
      show: true,
    },
    {
      title: 'Agent数',
      code: 6,
      api: 'agentNum',
      icon: 'icon-Agentzongshu',
      text: type == 'yunwei' ? '未运行采集任务的 Agent 数：' : '',
      textCode: 1,
      textApi: type == 'yunwei' ? 'nonRelateAnyLogCollectTaskAgentNum' : '',
      show: true,
    },
    {
      title: 'Agent 版本数',
      code: 6,
      api: 'agentVersionNumber',
      icon: 'icon-Agentzongshu',
      text: '未运行任何 Agent实例的 Agent 版本数：',
      textCode: 1,
      textApi: 'nonRelateAnyAgentAgentVersionNum', // TODO: 字段确认
      show: type == 'yunwei',
    },

    {
      title: '采集任务数',
      code: 0,
      api: 'logCollectTaskNum',
      icon: 'icon-caijirenwuzongshu',
      text: type == 'yunwei' ? '未在 Agent 上运行的采集任务数：' : '',
      textCode: type == 'yunwei' ? 7 : '',
      textApi: type == 'yunwei' ? 'nonRelateAnyHostLogCollectTaskNum' : '',
      show: true,
    },
    {
      title: '采集路径数',
      code: 2,
      api: 'logCollectPathNum',
      icon: 'icon-caijilujingzongshu',
      show: type === 'yunwei',
    },
    {
      title: '当前全量 Agent CPU 耗费',
      code: '',
      api: 'agentCpuCoresSpend',
      icon: 'icon-a-cpuhaofei',
      unit: 'Cores',
      show: type === 'yunying',
    },
    {
      title: '当前全量 Agent 内存耗费',
      code: '',
      api: 'agentMemorySpend',
      icon: 'icon-neicunhaofei',
      // unit: 'GB',
      type: 'formatSize',
      format: Utils.formatSize,
      show: type === 'yunying',
    },
    {
      title: '全量主机实时流量',
      code: '',
      api: 'allHostsSendAndReceiveBytesPerSecond',
      icon: 'icon-shanghangliuliang',
      unit: '/s',
      tip: 'byte',
      format: Utils.formatSize,
      type: 'formatSize',
      text: type == 'yunwei' ? '全量主机实时上行流量' : '',
      textCode: '',
      textApi: type == 'yunwei' ? 'allHostsSendBytesPerSecond' : '',
      text1: type == 'yunwei' ? '全量主机实时下行流量' : '',
      textCode1: '',
      textApi1: type == 'yunwei' ? 'allHostsReceiveBytesPerSecond' : '',
      show: true,
    },
    {
      title: '全量 Agent 实时流量',
      code: '',
      api: 'allAgentsSendAndReceiveBytesPerSecond',
      icon: 'icon-shanghangliuliang',
      tip: 'byte',
      unit: '/s',
      format: Utils.formatSize,
      type: 'formatSize',
      text: type == 'yunwei' ? '全部agent实时上行流量' : '',
      textCode: '',
      textApi: type == 'yunwei' ? 'allAgentsSendBytesPerSecond' : '',
      text1: type == 'yunwei' ? '全部agent实时下行流量' : '',
      textCode1: '',
      textApi1: type == 'yunwei' ? 'allAgentsReceiveBytesPerSecond' : '',
      show: true,
    },
    {
      title: '全量Agent近1分钟采集数据量',
      code: '',
      api: 'agentSendBytesLast1Minute',
      icon: 'icon-dangricaijiliang',
      tip: 'byte',
      format: Utils.formatSize,
      show: type === 'yunying',
    },
    {
      title: '全量 Agent 近1分钟采集条数',
      code: '',
      api: 'agentSendLogEventsLast1Minute',
      icon: 'icon-dangricaijitiaoshu',
      unit: '条',
      tip: '条',
      format: numTrans,
      show: type === 'yunying',
    },
    {
      title: '全量 Agent 当日采集数据量',
      code: 10,
      api: 'agentSendBytesDay',
      icon: 'icon-dangricaijiliang',
      tip: 'byte',
      type: 'formatSize',
      format: Utils.formatSize,
      show: type === 'yunying',
    },
    {
      title: '全量 Agent 当日采集条数',
      code: 11,
      api: 'agentSendLogEventsDay',
      icon: 'icon-dangricaijitiaoshu',
      unit: '条',
      tip: '条',
      format: numTrans,
      show: type === 'yunying',
    },
  ].filter((row) => row.show);
};
