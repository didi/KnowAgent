<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.didichuxing.datachannel.agentmanager.persistence.mysql.KafkaClusterMapper" >
  <resultMap id="BaseResultMap" type="com.didichuxing.datachannel.agentmanager.common.bean.po.receiver.KafkaClusterPO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="kafka_cluster_name" property="kafkaClusterName" jdbcType="VARCHAR" />
    <result column="kafka_cluster_broker_configuration" property="kafkaClusterBrokerConfiguration" jdbcType="VARCHAR" />
    <result column="kafka_cluster_producer_init_configuration" property="kafkaClusterProducerInitConfiguration" jdbcType="VARCHAR" />
    <result column="kafka_cluster_id" property="kafkaClusterId" jdbcType="BIGINT" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="agent_error_logs_send_topic" property="agentErrorLogsTopic" jdbcType="VARCHAR" />
    <result column="agent_metrics_send_topic" property="agentMetricsTopic" jdbcType="VARCHAR" />
    <result column="receiver_type" property="receiverType" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, kafka_cluster_name, kafka_cluster_broker_configuration, kafka_cluster_producer_init_configuration, kafka_cluster_id,
    operator, agent_metrics_send_topic, agent_error_logs_send_topic, create_time, modify_time, receiver_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_kafka_cluster
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_kafka_cluster
  </select>

  <select id="paginationQueryByConditon" resultMap="BaseResultMap" parameterType="com.didichuxing.datachannel.agentmanager.common.bean.domain.receiver.ReceiverPaginationQueryConditionDO" >
    select
    <include refid="Base_Column_List" />
    from tb_kafka_cluster
    <where>
      1 = 1
      <if test="kafkaClusterName != null">
          and kafka_cluster_name like concat('%',#{kafkaClusterName},'%')
      </if>
      <if test="kafkaClusterBrokerConfiguration != null">
        and kafka_cluster_broker_configuration like concat('%',#{kafkaClusterBrokerConfiguration},'%')
      </if>
      <if test="createTimeStart != null">
          and create_time >= #{createTimeStart}
      </if>
      <if test="createTimeEnd != null">
          and #{createTimeEnd} >= create_time
      </if>
    </where>
    order by
    <choose>
      <when test="sortColumn != null">
        ${sortColumn}
        <choose>
          <when test="asc == true">
            asc
          </when>
          <otherwise>
            desc
          </otherwise>
        </choose>
      </when>
      <otherwise>
        modify_time desc
      </otherwise>
    </choose>
    limit #{limitFrom}, #{limitSize}
  </select>

  <select id="queryCountByConditon" resultType="java.lang.Integer" parameterType="com.didichuxing.datachannel.agentmanager.common.bean.domain.receiver.ReceiverPaginationQueryConditionDO" >
    select
    count(*)
    from tb_kafka_cluster
    <where>
      1 = 1
      <if test="kafkaClusterName != null">
        and kafka_cluster_name like concat('%',#{kafkaClusterName},'%')
      </if>
      <if test="kafkaClusterBrokerConfiguration != null">
        and kafka_cluster_broker_configuration like concat('%',#{kafkaClusterBrokerConfiguration},'%')
      </if>
      <if test="createTimeStart != null">
        and create_time >= #{createTimeStart}
      </if>
      <if test="createTimeEnd != null">
        and #{createTimeEnd} >= create_time
      </if>
    </where>
  </select>

  <select id="selectByKafkaClusterId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from tb_kafka_cluster
    where kafka_cluster_id = #{kafkaClusterId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_kafka_cluster
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.didichuxing.datachannel.agentmanager.common.bean.po.receiver.KafkaClusterPO" useGeneratedKeys="true" keyProperty="id">
    insert into tb_kafka_cluster (id, kafka_cluster_name, kafka_cluster_broker_configuration, 
      kafka_cluster_producer_init_configuration, kafka_cluster_id, operator,agent_metrics_send_topic, agent_error_logs_send_topic,
      create_time, modify_time, receiver_type)
    values (
            #{id,jdbcType=BIGINT}, #{kafkaClusterName,jdbcType=VARCHAR}, #{kafkaClusterBrokerConfiguration,jdbcType=VARCHAR},
      #{kafkaClusterProducerInitConfiguration,jdbcType=VARCHAR}, #{kafkaClusterId, jdbcType=BIGINT}, #{operator,jdbcType=VARCHAR},
      #{agentMetricsTopic,jdbcType=VARCHAR}, #{agentErrorLogsTopic,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{receiverType,jdbcType=TINYINT}
      )
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.didichuxing.datachannel.agentmanager.common.bean.po.receiver.KafkaClusterPO" >
    update tb_kafka_cluster
    set kafka_cluster_name = #{kafkaClusterName,jdbcType=VARCHAR},
      kafka_cluster_broker_configuration = #{kafkaClusterBrokerConfiguration,jdbcType=VARCHAR},
      kafka_cluster_producer_init_configuration = #{kafkaClusterProducerInitConfiguration,jdbcType=VARCHAR},
      kafka_cluster_id = #{kafkaClusterId,jdbcType=BIGINT},
      operator = #{operator,jdbcType=VARCHAR},
      agent_metrics_send_topic = #{agentMetricsTopic,jdbcType=VARCHAR},
      agent_error_logs_send_topic = #{agentErrorLogsTopic,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      receiver_type = #{receiverType,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByKafkaClusterName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from tb_kafka_cluster
    where kafka_cluster_name = #{kafkaClusterName,jdbcType=VARCHAR}
  </select>

  <select id="selectByKafkaClusterBrokerConfiguration" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from tb_kafka_cluster
    where kafka_cluster_broker_configuration = #{kafkaClusterBrokerConfiguration,jdbcType=VARCHAR}
  </select>

  <select id="getAgentErrorLogsTopicExistsKafkaCluster" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from tb_kafka_cluster
    where agent_error_logs_send_topic != ''
    limit 1
  </select>

  <select id="getAgentMetricsTopicExistsKafkaCluster" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from tb_kafka_cluster
    where agent_metrics_send_topic != ''
    limit 1
  </select>

</mapper>

