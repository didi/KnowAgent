<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.didichuxing.datachannel.agentmanager.persistence.mysql.ServiceMapper">
  <resultMap id="BaseResultMap" type="com.didichuxing.datachannel.agentmanager.common.bean.po.service.ServicePO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="service_name" jdbcType="VARCHAR" property="servicename" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="extenal_service_id" jdbcType="BIGINT" property="extenalServiceId" />
  </resultMap>
  <sql id="Base_Column_List">
    tb_service.id, tb_service.service_name, tb_service.operator, tb_service.create_time, tb_service.modify_time, extenal_service_id
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_service
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.didichuxing.datachannel.agentmanager.common.bean.po.service.ServicePO" useGeneratedKeys="true" keyProperty="id">
    insert into tb_service (id, service_name, operator, extenal_service_id)
    values (#{id,jdbcType=BIGINT}, #{servicename,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, #{extenalServiceId,jdbcType=BIGINT})
  </insert>
  <select id="countAll" resultType="java.lang.Long" >
    select
      count(*)
    from tb_service
  </select>

  <resultMap id="paginationQueryListResultMap" type="com.didichuxing.datachannel.agentmanager.common.bean.vo.service.ServicePaginationRecordVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="service_name" jdbcType="VARCHAR" property="serviceName" />
    <result column="relation_host_num" jdbcType="VARCHAR" property="relationHostCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_service
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByExternalServiceId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_service
    where extenal_service_id = #{externalServiceId,jdbcType=BIGINT}
  </select>
  <select id="list" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_service
  </select>
  <select id="selectByHostId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_service INNER JOIN tb_service_host ON tb_service.id = tb_service_host.service_id
    WHERE tb_service_host.host_id = #{hostId,jdbcType=BIGINT}
  </select>

  <select id="selectByProjectId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_service
    <if test="projectId != null">
      INNER JOIN tb_service_project ON tb_service.id = tb_service_project.service_id
    </if>
    WHERE 1=1
    <if test="projectId != null">
    AND tb_service_project.project_id = #{projectId,jdbcType=BIGINT}
    </if>
  </select>

  <select id="selectByLogCollectTaskId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_service INNER JOIN tb_log_collect_task_service ON tb_service.id = tb_log_collect_task_service.service_id
    WHERE tb_log_collect_task_service.log_collector_task_id = #{logCollectTaskId,jdbcType=BIGINT}
  </select>

  <select id="selectByServiceName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_service
    where service_name = #{serviceName,jdbcType=VARCHAR}
  </select>

  <resultMap id="PaginationQueryByConditonResultMap" type="com.didichuxing.datachannel.agentmanager.common.bean.domain.service.ServicePaginationRecordDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="service_name" jdbcType="VARCHAR" property="servicename" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="relation_host_count" jdbcType="INTEGER" property="relationHostCount" />
  </resultMap>

  <select id="paginationQueryByConditon" resultMap="PaginationQueryByConditonResultMap" parameterType="com.didichuxing.datachannel.agentmanager.common.bean.domain.service.ServicePaginationQueryConditionDO" >
    select
    t1.id id, t1.service_name service_name, t1.create_time create_time, t2.relation_host_count relation_host_count
    from tb_service t1
    LEFT JOIN
    (
      SELECT service_id, COUNT(host_id) as relation_host_count FROM tb_service_host GROUP BY service_id
    ) t2 ON t2.service_id = t1.id
    <where>
      1 = 1
      <if test="serviceName != null">
        and t1.service_name like concat('%',#{serviceName},'%')
      </if>
      <if test="createTimeStart != null">
        and t1.create_time >= #{createTimeStart}
      </if>
      <if test="createTimeEnd != null">
        and #{createTimeEnd} >= t1.create_time
      </if>
    </where>
    order by
    <choose>
      <when test="sortColumn != null">
        ${sortColumn}
        <choose>
          <when test="asc == true">
            asc
          </when>
          <otherwise>
            desc
          </otherwise>
        </choose>
      </when>
      <otherwise>
        relation_host_count desc
      </otherwise>
    </choose>
    limit #{limitFrom}, #{limitSize}
  </select>

  <select id="queryCountByCondition" resultType="java.lang.Integer" parameterType="com.didichuxing.datachannel.agentmanager.common.bean.domain.service.ServicePaginationQueryConditionDO" >
    select count(t3.c) from (
    select
    t1.id as c
    from tb_service t1
    LEFT JOIN
    (
    SELECT service_id, COUNT(host_id) as relation_host_count FROM tb_service_host GROUP BY service_id
    ) t2 ON t2.service_id = t1.id
    <where>
      1 = 1
      <if test="serviceName != null">
        and t1.service_name like concat('%',#{serviceName},'%')
      </if>
      <if test="createTimeStart != null">
        and t1.create_time >= #{createTimeStart}
      </if>
      <if test="createTimeEnd != null">
        and #{createTimeEnd} >= t1.create_time
      </if>
    </where>
    ) as t3
  </select>

</mapper>
